import { StyleSheet, Text, View, Image, ScrollView, TouchableOpacity, SafeAreaView } from 'react-native'
import React, { useState } from 'react'
import { StatusBar } from 'expo-status-bar'
import { useRouter } from 'expo-router'
import { LinearGradient } from 'expo-linear-gradient'
import { Ionicons, MaterialCommunityIcons, FontAwesome5 } from '@expo/vector-icons'

const Home = () => {
  const router = useRouter();
  const [currentTab, setCurrentTab] = useState('home');
  
  const weatherForecast = [
    { day: 'Mon', temp: '12°', icon: 'weather-cloudy' },
    { day: 'Tue', temp: '11°', icon: 'weather-rainy' },
    { day: 'Wed', temp: '13°', icon: 'weather-partly-cloudy' },
    { day: 'Thu', temp: '14°', icon: 'weather-lightning' },
    { day: 'Fri', temp: '15°', icon: 'weather-sunny' }
  ];

  const emergencyServices = [
    { id: 1, title: 'Request Help', icon: 'hand-heart', route: '/ros', color: '#FF6B6B' },
    { id: 2, title: 'Volunteer', icon: 'account-group', route: '/volunteer', color: '#4ECDC4' },
    { id: 3, title: 'Translate', icon: 'translate', route: '/translator', color: '#FFE66D' },
    { id: 4, title: 'Report', icon: 'alert-circle', route: '/crowd', color: '#1A535C' }
  ];

  const newsItems = [
    { 
      id: 1, 
      title: "Local flooding affects downtown area", 
      summary: "Heavy rains caused significant flooding in the city center. Rescue operations are underway.",
      timeAgo: "2 hours ago",
      category: "Alert"
    },
    { 
      id: 2, 
      title: "Community volunteers needed for cleanup", 
      summary: "Join the weekend cleanup effort at Central Park following the storm damage.",
      timeAgo: "5 hours ago",
      category: "Community"
    },
    { 
      id: 3, 
      title: "Weather warning issued for weekend", 
      summary: "National Weather Service predicts severe thunderstorms starting Friday night.",
      timeAgo: "1 day ago",
      category: "Warning"
    },
  ];

  const getCategoryColor = (category) => {
    switch(category) {
      case 'Alert': return '#FF6B6B';
      case 'Warning': return '#FFE66D';
      case 'Community': return '#4ECDC4';
      default: return '#4ECDC4';
    }
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar style="light" />
      
      {/* Header */}
      <LinearGradient
        colors={['#1A535C', '#4ECDC4']}
        start={{ x: 0, y: 0 }}
        end={{ x: 1, y: 0 }}
        style={styles.header}
      >
        <View style={styles.headerContent}>
          <View>
            <Text style={styles.welcomeText}>Welcome to</Text>
            <Text style={styles.headerTitle}>RescueBytz</Text>
          </View>
          <TouchableOpacity style={styles.profileButton} onPress={() => router.push('/profile')}>
            <Ionicons name="person-circle-outline" size={36} color="#fff" />
          </TouchableOpacity>
        </View>
      </LinearGradient>

      <ScrollView showsVerticalScrollIndicator={false} style={styles.contentContainer}>
        {/* Active Alert Banner (if any) */}
        <View style={styles.alertBanner}>
          <View style={styles.alertIconContainer}>
            <Ionicons name="information-circle" size={24} color="#fff" />
          </View>
          <Text style={styles.alertText}>No active alerts in your area right now</Text>
          <TouchableOpacity>
            <Ionicons name="chevron-forward" size={20} color="#fff" />
          </TouchableOpacity>
        </View>

        {/* Weather Card */}
        <LinearGradient
          colors={['#4ECDC4', '#1A535C']}
          style={styles.weatherCard}
        >
          <View style={styles.weatherHeader}>
            <View style={styles.currentWeather}>
              <MaterialCommunityIcons name="weather-cloudy" size={36} color="#fff" />
              <View style={styles.tempContainer}>
                <Text style={styles.currentTemp}>12°</Text>
                <Text style={styles.location}>New York</Text>
              </View>
            </View>
            <Text style={styles.weatherDesc}>Cloudy with chances of rain</Text>
          </View>
          
          <View style={styles.forecastContainer}>
            {weatherForecast.map((day, index) => (
              <View key={index} style={styles.forecastDay}>
                <Text style={styles.forecastDayText}>{day.day}</Text>
                <MaterialCommunityIcons name={day.icon} size={20} color="#fff" />
                <Text style={styles.forecastTemp}>{day.temp}</Text>
              </View>
            ))}
          </View>
          
          <TouchableOpacity 
            style={styles.weatherDetailsButton}
            onPress={() => router.push('/pages/Weather')}
          >
            <Text style={styles.weatherDetailsText}>View Details</Text>
          </TouchableOpacity>
        </LinearGradient>

        {/* Emergency Services Grid */}
        <View style={styles.servicesSection}>
          <Text style={styles.sectionTitle}>Emergency Services</Text>
          <View style={styles.servicesGrid}>
            {emergencyServices.map(service => (
              <TouchableOpacity 
                key={service.id} 
                style={[styles.serviceCard, { backgroundColor: service.color }]}
                onPress={() => router.push(service.route)}
              >
                <MaterialCommunityIcons name={service.icon} size={32} color="#fff" />
                <Text style={styles.serviceTitle}>{service.title}</Text>
              </TouchableOpacity>
            ))}
          </View>
        </View>

        {/* Live Chat Support */}
        <TouchableOpacity 
          style={styles.chatSupport}
          onPress={() => router.push('/chat')}
        >
          <View style={styles.chatContent}>
            <Ionicons name="chatbubbles" size={24} color="#fff" />
            <View style={styles.chatTextContainer}>
              <Text style={styles.chatTitle}>Live Support</Text>
              <Text style={styles.chatSubtitle}>Chat with emergency personnel</Text>
            </View>
          </View>
          <Ionicons name="chevron-forward" size={24} color="#fff" />
        </TouchableOpacity>

        {/* News & Updates */}
        <View style={styles.newsSection}>
          <View style={styles.newsTitleRow}>
            <Text style={styles.sectionTitle}>News & Updates</Text>
            <TouchableOpacity onPress={() => router.push('/pages/News')}>
              <Text style={styles.seeAllText}>See All</Text>
            </TouchableOpacity>
          </View>
          
          {newsItems.map(item => (
            <TouchableOpacity key={item.id} style={styles.newsCard}>
              <View style={styles.newsHeader}>
                <Text style={[styles.newsCategory, { color: getCategoryColor(item.category) }]}>
                  {item.category}
                </Text>
                <Text style={styles.newsTime}>{item.timeAgo}</Text>
              </View>
              <Text style={styles.newsTitle}>{item.title}</Text>
              <Text style={styles.newsSummary}>{item.summary}</Text>
            </TouchableOpacity>
          ))}
        </View>

        {/* Emergency Contact */}
        <TouchableOpacity style={styles.emergencyContactButton}>
          <FontAwesome5 name="phone-alt" size={20} color="#fff" />
          <Text style={styles.emergencyButtonText}>Emergency Call</Text>
        </TouchableOpacity>
      </ScrollView>

      {/* Bottom Navigation */}
      <View style={styles.bottomNav}>
        <TouchableOpacity 
          style={[styles.navItem, currentTab === 'home' && styles.activeNavItem]} 
          onPress={() => setCurrentTab('home')}
        >
          <Ionicons name="home" size={24} color={currentTab === 'home' ? "#4ECDC4" : "#777"} />
          <Text style={[styles.navText, currentTab === 'home' && styles.activeNavText]}>Home</Text>
        </TouchableOpacity>
        
        <TouchableOpacity 
          style={styles.navItem} 
          onPress={() => router.push('/map')}
        >
          <Ionicons name="map" size={24} color="#777" />
          <Text style={styles.navText}>Map</Text>
        </TouchableOpacity>
        
        <TouchableOpacity style={styles.sosButton}>
          <LinearGradient
            colors={['#FF6B6B', '#FF8E8E']}
            style={styles.sosGradient}
          >
            <Text style={styles.sosText}>SOS</Text>
          </LinearGradient>
        </TouchableOpacity>
        
        <TouchableOpacity 
          style={styles.navItem} 
          onPress={() => router.push('/resources')}
        >
          <Ionicons name="book" size={24} color="#777" />
          <Text style={styles.navText}>Resources</Text>
        </TouchableOpacity>
        
        <TouchableOpacity 
          style={styles.navItem} 
          onPress={() => router.push('/profile')}
        >
          <Ionicons name="person" size={24} color="#777" />
          <Text style={styles.navText}>Profile</Text>
        </TouchableOpacity>
      </View>
    </SafeAreaView>
  )
}

export default Home

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F7F9FC',
  },
  header: {
    paddingTop: 50,
    paddingBottom: 20,
    paddingHorizontal: 20,
    borderBottomLeftRadius: 20,
    borderBottomRightRadius: 20,
  },
  headerContent: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  welcomeText: {
    color: 'rgba(255,255,255,0.8)',
    fontSize: 16,
  },
  headerTitle: {
    color: '#fff',
    fontSize: 24,
    fontWeight: 'bold',
  },
  profileButton: {
    padding: 5,
  },
  contentContainer: {
    flex: 1,
    paddingHorizontal: 15,
  },
  alertBanner: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#4ECDC4',
    borderRadius: 12,
    padding: 15,
    marginTop: 20,
  },
  alertIconContainer: {
    marginRight: 10,
  },
  alertText: {
    flex: 1,
    color: '#fff',
    fontWeight: '500',
  },
  
  // Weather Card
  weatherCard: {
    borderRadius: 16,
    marginTop: 20,
    padding: 15,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  weatherHeader: {
    marginBottom: 15,
  },
  currentWeather: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 5,
  },
  tempContainer: {
    marginLeft: 10,
  },
  currentTemp: {
    fontSize: 32,
    fontWeight: 'bold',
    color: '#fff',
  },
  location: {
    color: 'rgba(255,255,255,0.8)',
    fontSize: 14,
  },
  weatherDesc: {
    color: '#fff',
    fontSize: 14,
  },
  forecastContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingVertical: 15,
    borderTopWidth: 1,
    borderTopColor: 'rgba(255,255,255,0.2)',
    borderBottomWidth: 1,
    borderBottomColor: 'rgba(255,255,255,0.2)',
  },
  forecastDay: {
    alignItems: 'center',
  },
  forecastDayText: {
    color: 'rgba(255,255,255,0.8)',
    fontSize: 12,
    marginBottom: 5,
  },
  forecastTemp: {
    color: '#fff',
    fontSize: 14,
    fontWeight: '500',
    marginTop: 5,
  },
  weatherDetailsButton: {
    alignSelf: 'center',
    marginTop: 15,
    paddingVertical: 6,
    paddingHorizontal: 15,
    borderRadius: 20,
    backgroundColor: 'rgba(255,255,255,0.2)',
  },
  weatherDetailsText: {
    color: '#fff',
    fontSize: 14,
    fontWeight: '500',
  },
  
  // Emergency Services
  servicesSection: {
    marginTop: 25,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#1A535C',
    marginBottom: 15,
  },
  servicesGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  serviceCard: {
    width: '48%',
    padding: 20,
    borderRadius: 16,
    alignItems: 'center',
    marginBottom: 15,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 3,
    elevation: 2,
  },
  serviceTitle: {
    color: '#fff',
    fontWeight: '600',
    marginTop: 10,
    textAlign: 'center',
  },
  
  // Chat Support
  chatSupport: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    backgroundColor: '#1A535C',
    padding: 15,
    borderRadius: 16,
    marginTop: 10,
    marginBottom: 25,
  },
  chatContent: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  chatTextContainer: {
    marginLeft: 15,
  },
  chatTitle: {
    color: '#fff',
    fontWeight: '600',
    fontSize: 16,
  },
  chatSubtitle: {
    color: 'rgba(255,255,255,0.8)',
    fontSize: 12,
    marginTop: 2,
  },
  
  // News Section
  newsSection: {
    marginBottom: 20,
  },
  newsTitleRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 10,
  },
  seeAllText: {
    color: '#4ECDC4',
    fontWeight: '500',
  },
  newsCard: {
    backgroundColor: '#fff',
    borderRadius: 16,
    padding: 15,
    marginBottom: 15,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
    elevation: 2,
  },
  newsHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 10,
  },
  newsCategory: {
    fontWeight: '600',
    fontSize: 13,
  },
  newsTime: {
    color: '#999',
    fontSize: 12,
  },
  newsTitle: {
    fontWeight: '600',
    fontSize: 16,
    marginBottom: 8,
    color: '#333',
  },
  newsSummary: {
    color: '#666',
    fontSize: 14,
    lineHeight: 20,
  },
  
  // Emergency Contact Button
  emergencyContactButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#FF6B6B',
    padding: 15,
    borderRadius: 16,
    marginBottom: 100,
  },
  emergencyButtonText: {
    color: '#fff',
    fontWeight: '600',
    fontSize: 16,
    marginLeft: 10,
  },
  
  // Bottom Navigation
  bottomNav: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    alignItems: 'center',
    backgroundColor: '#fff',
    paddingVertical: 10,
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: -2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 10,
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
  },
  navItem: {
    alignItems: 'center',
    paddingHorizontal: 15,
  },
  activeNavItem: {
    borderBottomWidth: 2,
    borderBottomColor: '#4ECDC4',
  },
  navText: {
    color: '#777',
    fontSize: 12,
    marginTop: 4,
  },
  activeNavText: {
    color: '#4ECDC4',
    fontWeight: '500',
  },
  sosButton: {
    shadowColor: "#FF6B6B",
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 5,
    elevation: 5,
  },
  sosGradient: {
    width: 60,
    height: 60,
    borderRadius: 30,
    justifyContent: 'center',
    alignItems: 'center',
    marginTop: -25,
  },
  sosText: {
    color: '#fff',
    fontWeight: 'bold',
  }
});